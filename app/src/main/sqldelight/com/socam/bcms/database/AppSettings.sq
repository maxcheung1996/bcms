-- AppSettings table for application configuration
CREATE TABLE AppSettings (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    setting_key TEXT NOT NULL UNIQUE,
    setting_value TEXT NOT NULL,
    setting_type TEXT NOT NULL DEFAULT 'STRING', -- STRING, INTEGER, BOOLEAN, JSON
    description TEXT,
    is_user_configurable INTEGER NOT NULL DEFAULT 1,
    created_at INTEGER NOT NULL,
    updated_at INTEGER NOT NULL
);

-- Default app settings will be inserted programmatically by DatabaseManager

-- Queries for AppSettings
selectAllSettings:
SELECT * FROM AppSettings ORDER BY setting_key;

selectSettingByKey:
SELECT * FROM AppSettings WHERE setting_key = ?;

selectUserConfigurableSettings:
SELECT * FROM AppSettings WHERE is_user_configurable = 1 ORDER BY setting_key;

updateSetting:
UPDATE AppSettings SET 
    setting_value = ?,
    updated_at = strftime('%s', 'now')
WHERE setting_key = ?;

insertSetting:
INSERT INTO AppSettings (setting_key, setting_value, setting_type, description, is_user_configurable, created_at, updated_at)
VALUES (?, ?, ?, ?, ?, strftime('%s', 'now'), strftime('%s', 'now'));

insertOrReplaceSettingByKey:
INSERT OR REPLACE INTO AppSettings (setting_key, setting_value, setting_type, description, is_user_configurable, created_at, updated_at)
VALUES (?, ?, 'STRING', 'User preference setting', 1, strftime('%s', 'now'), strftime('%s', 'now'));

deleteSetting:
DELETE FROM AppSettings WHERE setting_key = ?;

-- Tag counter specific queries
insertOrReplaceTagCounter:
INSERT OR REPLACE INTO AppSettings (setting_key, setting_value, setting_type, description, is_user_configurable, created_at, updated_at)
VALUES ('TAG_COUNTER', ?, 'INTEGER', 'Auto-increment counter for tag number generation', 0, strftime('%s', 'now'), strftime('%s', 'now'));

getTagCounter:
SELECT setting_value FROM AppSettings WHERE setting_key = 'TAG_COUNTER';

incrementTagCounter:
UPDATE AppSettings SET 
    setting_value = CAST(setting_value AS INTEGER) + 1,
    updated_at = strftime('%s', 'now')
WHERE setting_key = 'TAG_COUNTER';

resetTagCounter:
UPDATE AppSettings SET 
    setting_value = '1',
    updated_at = strftime('%s', 'now')
WHERE setting_key = 'TAG_COUNTER';

-- Serial Number (YYYY) specific queries for new tag generation system
insertOrReplaceSerialNumber:
INSERT OR REPLACE INTO AppSettings (setting_key, setting_value, setting_type, description, is_user_configurable, created_at, updated_at)
VALUES ('SERIAL_NUMBER', ?, 'STRING', 'Device serial number (YYYY) for tag number generation', 0, strftime('%s', 'now'), strftime('%s', 'now'));

getSerialNumber:
SELECT setting_value FROM AppSettings WHERE setting_key = 'SERIAL_NUMBER';

incrementSerialNumber:
UPDATE AppSettings SET 
    setting_value = printf('%04d', CAST(setting_value AS INTEGER) + 1),
    updated_at = strftime('%s', 'now')
WHERE setting_key = 'SERIAL_NUMBER';

updateSerialNumber:
UPDATE AppSettings SET 
    setting_value = ?,
    updated_at = strftime('%s', 'now')
WHERE setting_key = 'SERIAL_NUMBER';
